name: "aws-runs-on"
# Canonical GitHub repo
github_repo: "cloudposse-terraform-components/aws-runs-on"
tags:
  - component/runs-on
  - layer/github
  - provider/aws
# Categories of this project
categories:
  - component/runs-on
  - layer/github
  - provider/aws
# License of this project
license: "APACHE2"
# Badges to display
badges:
  - name: Latest Release
    image: https://img.shields.io/github/release/cloudposse-terraform-components/aws-runs-on.svg?style=for-the-badge
    url: https://github.com/cloudposse-terraform-components/aws-runs-on/releases/latest
  - name: Slack Community
    image: https://slack.cloudposse.com/for-the-badge.svg
    url: https://slack.cloudposse.com
related:
  - name: "Cloud Posse Terraform Modules"
    description: Our collection of reusable Terraform modules used by our reference architectures.
    url: "https://docs.cloudposse.com/modules/"
  - name: "Atmos"
    description: "Atmos is like docker-compose but for your infrastructure"
    url: "https://atmos.tools"
contributors: [] # If included generates contribs
# Short description of this project
description: |
  Component: `runs-on`

  This component provisions RunsOn for GitHub Actions self-hosted runners. After deploying this
  component, install the RunsOn GitHub App in your organization to enable runner registration.
  See the RunsOn documentation for GitHub App installation and configuration details.

  Compatibility: Requires RunsOn CloudFormation template version 2.8.2 or newer due to output changes.
# How to use this project
usage: |
  Stack Level: Regional

  (`runs-on/defaults.yaml`)

  ```yaml
  components:
    terraform:
      runs-on/defaults:
        metadata:
          component: runs-on
          type: abstract
        vars:
          name: runs-on
          enabled: true
          capabilities: ["CAPABILITY_IAM"]
          on_failure: "ROLLBACK"
          timeout_in_minutes: 30
          # template_url: https://runs-on.s3.eu-west-1.amazonaws.com/cloudformation/template.yaml
          # See latest version and changelog at https://runs-on.com/changelog/
          template_url: https://runs-on.s3.eu-west-1.amazonaws.com/cloudformation/template-v2.8.3.yaml
          parameters:
            AppCPU: 256
            AppMemory: 512
            EmailAddress: developer@cloudposse.com
            # Environments let you run multiple Stacks in one organization and segregate resources.
            # If you specify an environment, then all the jobs must also specify which environment they are running in.
            # To keep things simple, we use the default environment ("production") and leave the `env` label unset in the workflow.
            EncryptEbs: true
            # With the default value of SSHAllowed: true, the runners that are placed in a public subnet
            # will allow ingress on port 22. This is highly abused (scanners running constantly looking for vulnerable SSH servers)
            # and should not be allowed. If you need access to the runners, use Session Manager (SSM).
            SSHAllowed: false
            LicenseKey: <LICENSE_KEY>
            Private: false # always | true | false - Always will default place in private subnet, true will place in private subnet if tag `private=true` present on workflow, false will place in public subnet
            RunnerLargeDiskSize: 120 # Disk size in GB for disk=large runners
            Ec2LogRetentionInDays: 30
            VpcFlowLogRetentionInDays: 14
  ```

  ### Embedded networking (Runs On managed VPC)

  When no VPC details are set, the component will create a new VPC and subnets via the CloudFormation template.
  Set the `VpcCidrBlock` parameter to the CIDR block of the VPC that will be created.

  (`runs-on.yaml`)

  ```yaml
  import:
    - orgs/acme/core/auto/_defaults
    - mixins/region/us-east-1
    - catalog/runs-on/defaults

  components:
    terraform:
      runs-on:
        metadata:
          inherits:
            - runs-on/defaults
          component: runs-on
        vars:
          networking_stack: embedded
          parameters:
            VpcCidrBlock: 10.100.0.0/16
  ```

  ### External networking (Use existing VPC)

  Use an existing VPC by setting `vpc_id`, `subnet_ids`, and `security_group_id`.

  (`_defaults.yaml`)

  ```yaml
  terraform:
    hooks:
      store-outputs:
        name: auto/ssm
  ```

  (`runs-on.yaml`)

  ```yaml
  import:
    - orgs/acme/core/auto/_defaults
    - mixins/region/us-east-1
    - catalog/vpc/defaults
    - catalog/runs-on/defaults

  components:
    terraform:
      runs-on:
        metadata:
          inherits:
            - runs-on/defaults
          component: runs-on
        vars:
          networking_stack: external
          # There are other ways to get the vpc_id, subnet_ids, and security_group_id.
          # Hardcode
          # Use Atmos KV Store
          # Use atmos !terraform.output yaml function
          vpc_id: !store auto/ssm vpc vpc_id
          subnet_ids: !store auto/ssm vpc private_subnet_ids
          security_group_id: !store auto/ssm vpc default_security_group_id
  ```

  <details>
  <summary>(DEPRECATED) Configuring with Transit Gateway</summary>
  It's important to note that the embedded networking will require some customization to work with Transit Gateway.
  The following configuration assumes you are using the Cloud Posse Components for Transit Gateway
  ([tgw/hub](https://docs.cloudposse.com/components/library/aws/tgw/hub/) &
  [tgw/spoke](https://docs.cloudposse.com/components/library/aws/tgw/spoke/)).
  The outputs of this component contain the same outputs as the `vpc` component. This is because the runs-on
  cloudformation stack creates a VPC and subnets.
  First we need to update the TGW/Hub - this stores information about the VPCs that are allowed to be used by TGW Spokes.
  Assuming your TGW/Hub lives in the `core-network` account and your Runs-On is deployed to `core-auto` (`tgw-hub.yaml`)

  ```yaml
  vars:
    connections:
      - account:
          tenant: core
          stage: auto
        vpc_component_names:
          - vpc
          - runs-on
  ```

  ```yaml
  components:
    terraform:
      tgw/hub/defaults:
        metadata:
          type: abstract
          component: tgw/hub
        vars:
          enabled: true
          name: tgw-hub
          tags:
            Team: sre
            Service: tgw-hub

      tgw/hub:
        metadata:
          inherits:
            - tgw/hub/defaults
          component: tgw/hub
        vars:
          connections:
            - account:
                tenant: core
                stage: network
            - account:
                tenant: core
                stage: auto
              vpc_component_names:
                - vpc
                - runs-on
            - account:
                tenant: plat
                stage: sandbox
            - account:
                tenant: plat
                stage: dev
            - account:
                tenant: plat
                stage: staging
            - account:
                tenant: plat
                stage: prod
  ```

  We then need to create a spoke that refers to the VPC created by Runs-On.
  (`tgw-spoke.yaml`)

  ```yaml
  tgw/spoke/runs-on:
    metadata:
      component: tgw/spoke
      inherits:
        - tgw/spoke-defaults
    vars:
      own_vpc_component_name: runs-on
      attributes:
        - "runs-on"
      connections:
        - account:
            tenant: core
            stage: network
        - account:
            tenant: core
            stage: auto
          vpc_component_names:
            - vpc
            - runs-on
        - account:
            tenant: plat
            stage: sandbox
        - account:
            tenant: plat
            stage: dev
        - account:
            tenant: plat
            stage: staging
        - account:
            tenant: plat
            stage: prod
  ```

  Finally we need to update the spokes of the TGW/Spokes to allow Runs-On traffic to the other accounts.
  Typically this includes `core-auto`, `core-network`, and your platform accounts.
  (`tgw-spoke.yaml`)

  ```yaml
    tgw/spoke:
      metadata:
        inherits:
          - tgw/spoke-defaults
      vars:
        connections:
          # ...
              vpc_component_names:
                - vpc
                - runs-on
          # ...
  ```
  </details>
# Helpful links
references:
  - name: RunsOn
    description: ""
    url: https://runs-on.com/
  - name: Install RunsOn GitHub App
    description: ""
    url: https://runs-on.com/guides/install/#3-github-app-registration
  - name: RunsOn Changelog
    description: ""
    url: https://runs-on.com/changelog/
  - name: Embedded vs External Networking
    description: ""
    url: https://runs-on.com/networking/embedded-vs-external/
  - name: Cloud Posse TGW Hub component
    description: ""
    url: https://docs.cloudposse.com/components/library/aws/tgw/hub/
  - name: Cloud Posse TGW Spoke component
    description: ""
    url: https://docs.cloudposse.com/components/library/aws/tgw/spoke/
